#include <iostream> // include iostream library for input/output operations
using namespace std; // use standard namespace for convenience

// Function to perform binary search on a sorted array
int binarySearch(int arr[], int target, int low, int high) {
  // Continue searching while the low index is less than or equal to the high index
  while (low <= high) {
    // Calculate the middle index of the current search range
    int mid = low + (high - low) / 2;

    // Check if the middle element is the target
    if (arr[mid] == target) {
      // Target found, return the index
      return mid;
    } else if (arr[mid] < target) {
      // Target is greater than the middle element, search in the right half
      low = mid + 1;
    } else {
      // Target is less than the middle element, search in the left half
      high = mid - 1;
    }
  }

  // Target not found, return -1
  return -1;
}

int main() {
  // Define a sorted array
  int arr[] = {2, 5, 8, 12, 16, 23, 38, 56, 72, 91};

  // Define the target element to search for
  int target = 23;

  // Calculate the size of the array
  int n = sizeof(arr) / sizeof(arr[0]);

  // Call the binarySearch function to search for the target element
  int result = binarySearch(arr, target, 0, n - 1);

  // Check if the target element was found
  if (result != -1) {
    // Element found, print the index
    cout << "Element found at index " << result << endl;
  } else {
    // Element not found, print a message
    cout << "Element not found in the array" << endl;
  }

  // Return 0 to indicate successful execution
  return 0;
}
